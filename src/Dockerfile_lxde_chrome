FROM debian:stable-slim 

# https://github.com/arktronic/docker-ubuntu-graphical/blob/master/Dockerfile 

ENV TERM xterm
# ENV LANG="en_US.UTF-8" \
#     LANGUAGE="en_US:en" \
#     LC_ALL="en_US.UTF-8" \
#     LC_CTYPE="en_US.UTF-8"
# FROM HERE
# https://www.cyberciti.biz/faq/perl-warning-setting-locale-failed-in-debian-ubuntu/
ENV LANG=en_US.UTF-8 \
    LANGUAGE=en_US:en \
    LC_CTYPE="en_US.UTF-8" \
    LC_NUMERIC="en_US.UTF-8" \
    LC_TIME="en_US.UTF-8" \
    LC_COLLATE="en_US.UTF-8" \
    LC_MONETARY="en_US.UTF-8" \
    LC_MESSAGES="en_US.UTF-8" \
    LC_PAPER="en_US.UTF-8" \
    LC_NAME="en_US.UTF-8" \
    LC_ADDRESS="en_US.UTF-8" \
    LC_TELEPHONE="en_US.UTF-8" \
    LC_MEASUREMENT="en_US.UTF-8" \
    LC_IDENTIFICATION="en_US.UTF-8" \
    LC_ALL="en_US.UTF-8"

#lxqt vs xfce
#https://www.google.com/search?channel=fs&client=ubuntu-sn&q=lxqt+vs+xfce


# man 8 apt-get

# avoid user interaction
ARG DEBIAN_FRONTEND=noninteractive

# set language first
RUN set -euxo \
    && apt update \
    && DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends --no-install-suggests --yes --quiet --quiet apt-utils \
    locales \
    apt-transport-https \
    apt-utils \
    && locale-gen en_US.UTF-8 \
    && DEBIAN_FRONTEND=noninteractive \
    && apt-get install  --no-install-recommends --no-install-suggests --yes --quiet --quiet procps \
    ca-certificates \
    dbus \                   
    dbus-user-session \
    dbus-x11 \
    dialog \
    locales-all \
    lxde-core \
    lxde-icon-theme \
    lxsession-default-apps \
    lxterminal \
    lxterminal \
    vim \
    x11-utils \
    x11vnc \
    xorgxrdp \
    xrdp \
    xvfb \
    curl \
    wget \
    libssl-dev \
    sudo \
    vim \
    fonts-liberation \
    upower \
    eterm \
    gnupg \
    libasound2 \          
    libatk1.0-0 \           
    libatk-bridge2.0-0 \
    libatspi2.0-0 \
    libc6-dev \     
    libcanberra-gtk-module  \
    libcups2 \       
    libdrm2 \                    
    libgbm1 \     
    libgl1-mesa-dri \
    libgtk-3-0 \ 
    libnspr4 \   
    libnss3 \            
    libpango1.0-0 \ 
    libpulse0 \   
    libu2f-udev \
    libv4l-0 \         
    libvulkan1 \   
    libwayland-client0 \
    libxcomposite1 \
    libxdamage-dev \
    unzip \
    pulseaudio \
    pulseaudio-utils \
    pulsemixer \
    pkg-config\
    libssl-dev\
    x11-utils \
    libasound2 \
    libasound2-plugins \
    alsa-utils \
    apulse \
    perl \
    at-spi2-core \
    menu \
    x11-xserver-utils \
    dos2unix \
    && apt-get autoremove --yes --auto-remove  \
    && apt-get clean --yes \
    && apt-get autoclean --yes \ 
    && rm -rf /var/lib/apt/lists/* \
    && update-locale LANG=en_US.UTF-8 LC_CTYPE=en_US.UTF-8 \
    && rm /etc/xrdp/rsakeys.ini /etc/xrdp/cert.pem /etc/xrdp/key.pem \
    && mv /usr/bin/lxpolkit /usr/bin/lxpolkit.disabled  


RUN touch /root/.Xresources
RUN touch /root/.Xauthority
WORKDIR /root
RUN mkdir .vnc
COPY scripts/xstartup /root/.vnc/
RUN echo "export USER=root" >> /root/.bashrc
ENV USER root

RUN mkdir -p /scripts/
COPY scripts/bootstrap.sh dbus/docker-dbus-entrypoint.sh scripts/start-chrome.sh /scripts/

RUN chmod +x /scripts/bootstrap.sh \
    &&  chmod +x /scripts/docker-dbus-entrypoint.sh

# install chrome amd chromedriver
# FROM HERE
# https://gist.github.com/varyonic/dea40abcf3dd891d204ef235c6e8dd79?permalink_comment_id=3976763
ENV CHROMEDRIVER_DIR /chromedriver


# maybe double
# Set up the Chrome PPA
# RUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \
#    && echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list \

RUN set -euxo \
    && apt-get update --yes \
    && apt-get install --no-install-recommends --no-install-suggests --yes --quiet --quiet google-chrome-stable \
    && CHROME_VERSION=$(google-chrome --product-version | cut --delimiter='.' --fields='1-3')  \
    && DRIVER_VERSION=$(curl -s "https://googlechromelabs.github.io/chrome-for-testing/LATEST_RELEASE_$CHROME_VERSION") \
    && wget -q --continue -P $CHROMEDRIVER_DIR "https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/$DRIVER_VERSION/linux64/chromedriver-linux64.zip" \
    && unzip $CHROMEDRIVER_DIR/chromedriver* -d $CHROMEDRIVER_DIR \
    && apt-get autoremove --yes --auto-remove  \
    && apt-get clean --yes \
    && apt-get autoclean --yes \ 
    && rm -rf /var/lib/apt/lists/*

# Put Chromedriver into the PATH
ENV PATH $CHROMEDRIVER_DIR:$PATH

# new user
ENV PUID='1000' \
    PGID='1000' \
    USER='user' 

# useradd and suoers
RUN set -euxo \ 
    && groupadd --gid "$PGID" "$USER"  \
    && useradd --home-dir /home/$USER --shell /bin/bash --uid "$PUID" --gid "$PGID" "$USER"  \
    && mkdir /home/$USER \
    && chown -R $USER:$USER /home/$USER  \
    && usermod -aG sudo "$USER"  \
    && usermod -aG adm "$USER"  \
    && usermod -aG audio "$USER"  \
    && cp /etc/skel/.bashrc /home/user/  \
    && mkdir -p /etc/sudoers.d  \
    && echo "user ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/"${USER}" \
    && chmod 0440 /etc/sudoers.d/"$USER" \
    && cp /etc/skel/.bashrc /home/${USER}

# setup docker_startup
COPY script/docker_startup.sh /  \
    && script/docker_startup.d/ 

ENTRYPOINT ["/scripts/docker-dbus-entrypoint.sh"]




# remove empty space
# :g/^ /norm dw
# sort
# cat /tmp/t.txt |sort

# cd src
# docker buildx build --progress=plain --no-cache -t debian_lxde_chrome -f Dockerfile_lxde_chrome "."

# w/o --no-cache
# cd src
# docker buildx build --progress=plain -t debian_lxde_chrome -f Dockerfile_lxde_chrome "."

# docker run -ti debian_lxde_chrome bash    
# use start script => cd ,/src && sh +x  start_container_lxde_chrome.sh